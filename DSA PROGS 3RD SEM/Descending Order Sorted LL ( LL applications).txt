#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<unistd.h>
#include<string.h>
#include<ctype.h>
typedef struct node
{
	int data;
	struct node *next;
}node;
node *start=NULL;
void insert();
void display();
void insert_front();
int main()
{
	int ch;
	while(1)
	{
		printf("\n Descending Order Sorted Linked List:\n");
		printf("\n1.Insert\n");
		printf("\n2.Display\n");
		printf("\n3.Exit\n");
		printf("\nEnter you choice:	\n");
		scanf("%d",&ch);
		switch(ch)
		{	
			case 1:
				insert();
				break;
			case  2:
				display();
				break;
			case 3:
				printf("\nExiting\n");
				exit(0);
			default:
				printf("\nWrong Option\n");
				break;
		}
	}
	return 0;
}
void insert()
{
	node *ptr,*temp;
	ptr=(node *)malloc(sizeof(node));
	if(ptr==NULL)
	{
		printf("\nMemory Allocation Failure!\n");
		exit(0);
	}
	else
	{
		printf("\nEnter data to insert:\n");
		scanf("%d",&ptr->data);
		int data=ptr->data;
		ptr->next=NULL;
		if(start==NULL ||  start->data < data)
		{		
			ptr->next=start;
			start=ptr;
		}
		else
		{
			temp=start;
			while(temp->next!=NULL&&temp->next->data > data)
			{	
				temp=temp->next;
			}
			ptr->next=temp->next;
			temp->next=ptr;
		}
	}
}
void display()
{
	if(start==NULL)
	{
		printf("\nList is empty\n");
		return;
	}
	else
	{
		node *temp;
		temp=start;
		printf("\nElements are:\n");
		while(temp!=NULL)
		{
			printf("%d\n",temp->data);
			temp=temp->next;
		}
	}
}	