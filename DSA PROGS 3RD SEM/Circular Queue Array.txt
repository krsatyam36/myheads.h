#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>
#include<time.h>
#include<unistd.h>
#define MAX 5
int queue[MAX];
int rear= -1,front= -1,count=0;			
void enqueue();
void dequeue();
void display();
void linear_search();
void ascending();
void descending();
int main()
{
	time_t now=time(NULL);
	char *str=ctime(&now);
	printf("\n%s\n",str);
	int choice;
	while(1)
	{
		printf("\nQueue ops using array\n");
		printf("\n1.Enqueue (Insert)\n");
		printf("\n2.Dequeue (Delete)\n");
		printf("\n3.Display\n");
		printf("\n4.Linear Search\n");
		printf("\n5.Bubble Sort\n");
		printf("\n6.Exit\n");
		printf("\nEnter your choice:\n");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:
				enqueue();
				break;
			case 2:
				dequeue();
				break;
			case 3:
				display();
				break;
			case 4:
				linear_search();
				break;
			case 5:
				int ch;
				printf("\n1.Ascending Order\n");
				printf("\n2.Descending Order\n");
				printf("\nEnter your choice:\n");
				scanf("%d",&ch);
				if(ch==1)
				{
					ascending();
					break;
				}
				else if(ch==2)
				{
					descending();
					break;
				}
				else
				{
					exit(0);
				}
				break;
			case 6:
				printf("\nExiting the code\n");
				exit(0);
			default:
				printf("\nWrong option entered\n");
				break;
		}
	}
	return 0;
}
void enqueue()
{
	int data;
	printf("\nEnter the data you want to insert:\n");
	scanf("%d",&data);
	if(front==-1 && rear==-1)
	{	
		front=rear=0;
		queue[rear]=data;
	}
	else if((rear+1)%MAX==front) // condition to check if full
	{	
		printf("\nThe Queue is full\n");
	}
	else
	{
		rear=(rear+1)%MAX;
		queue[rear]=data;
		printf("\nData inserted\n");
	}
}
void dequeue()
{
	if(front==-1 && rear==-1)
	{
		int ch;
		printf("\nQueue Underflow\nNo data in the Queue\n");
		printf("Do you want to input data ?\n1.YES\n2.NO\n");
		scanf("%d",&ch);
		if(ch==1)
		{
			enqueue();
		}
		else
		{
			exit(0);
		}
	}
	else if(front==rear)
	{	
		printf("\nData deleted is :  %d\n",queue[front]);
		front=-1;
		rear=-1;
	}
	else
	{
		printf("\nData deleted is : %d\n",queue[front]);
		front=(front+1)%MAX;
	}
}
void display()
{
	if(front==-1 && rear==-1)
	{
		int ch;
		printf("\nQueue Underflow\nNo data in the Queue\n");
		printf("Do you want to input data ?\n1.YES\n2.NO\n");
		scanf("%d",&ch);
		if(ch==1)
		{
			enqueue();
		}
		else
		{
			exit(0);
		}
	}
	else
	{
		int i=front;
		printf("\nThe list of elements are:	\n");
		while(i!=rear)
		{	
			printf("%d\n",queue[i]);
			i=(i+1)%MAX;
		}
		printf("%d\n",queue[rear]);
	}
}
void linear_search()
{
	if(front==-1 && rear ==-1)
	{
		int ch;
		printf("\nQueue Underflow\nNo data in the Queue\n");
		printf("Do you want to input data ?\n1.YES\n2.NO\n");
		scanf("%d",&ch);
		if(ch==1)
		{
			enqueue();
		}
		else
		{
			exit(0);
		}
	}
	else
	{
		int data,i,flag=0;
		printf("\nEnter the data you want to search:\n");
		scanf("%d",&data);
		int pos=front;
		printf("\nThe list of elements are:	\n");
		while(pos!=rear)
		{	
			if(data==queue[pos])
			{
				printf("\nData was found in %d position \n",pos);
				flag++;
			}
			pos=(pos+1)%MAX;
		}
		if(data==queue[rear])
		{
			printf("\nData was found in %d pos which is last position \n",rear);
			flag++;
		}
		if(flag==0)
		{	
			printf("\nData was not found \n");
		}
	}
}
void ascending()
{
	if(front==-1||front>rear)
	{
		int ch;
		printf("\nQueue Underflow\nNo data in the Queue\n");
		printf("Do you want to input data ?\n1.YES\n2.NO\n");
		scanf("%d",&ch);
		if(ch==1)
		{
			enqueue();
		}
		else
		{
			exit(0);
		}
	}
	else
	{
		int temp;
		for(int i=front;i<rear;i++)
		{
			for(int j=front;j<rear-i;j++)
			{
				if(queue[j+1]>queue[j])
				{
					temp=queue[j+1];
					queue[j+1]=queue[j];
					queue[j]=temp;
				}
			}
		}
		printf("\nUpdated Queue is :\n");
		display();
	}
}
void descending()
{
	if(front==-1||front>rear)
	{
		int ch;
		printf("\nQueue Underflow\nNo data in the Queue\n");
		printf("Do you want to input data ?\n1.YES\n2.NO\n");
		scanf("%d",&ch);
		if(ch==1)
		{
			enqueue();
		}
		else
		{
			exit(0);
		}
	}
	else
	{
		int temp;
		for(int i=front;i<rear;i++)
		{
			for(int j=front;j<rear-i;j++)
			{
				if(queue[j+1]<queue[j])
				{
					temp=queue[j+1];
					queue[j+1]=queue[j];
					queue[j]=temp;
				}
			}
		}
		printf("\nUpdated Queue is :\n");
		display();
	}
}
